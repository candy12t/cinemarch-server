// Code generated by MockGen. DO NOT EDIT.
// Source: screen_type.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	entity "github.com/candy12t/cinemarch-server/domain/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockScreenType is a mock of ScreenType interface.
type MockScreenType struct {
	ctrl     *gomock.Controller
	recorder *MockScreenTypeMockRecorder
}

// MockScreenTypeMockRecorder is the mock recorder for MockScreenType.
type MockScreenTypeMockRecorder struct {
	mock *MockScreenType
}

// NewMockScreenType creates a new mock instance.
func NewMockScreenType(ctrl *gomock.Controller) *MockScreenType {
	mock := &MockScreenType{ctrl: ctrl}
	mock.recorder = &MockScreenTypeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScreenType) EXPECT() *MockScreenTypeMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockScreenType) Create(ctx context.Context, screenType *entity.ScreenType) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, screenType)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockScreenTypeMockRecorder) Create(ctx, screenType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockScreenType)(nil).Create), ctx, screenType)
}

// FindByID mocks base method.
func (m *MockScreenType) FindByID(ctx context.Context, screenTypeID entity.UUID) (*entity.ScreenType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", ctx, screenTypeID)
	ret0, _ := ret[0].(*entity.ScreenType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID.
func (mr *MockScreenTypeMockRecorder) FindByID(ctx, screenTypeID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockScreenType)(nil).FindByID), ctx, screenTypeID)
}
